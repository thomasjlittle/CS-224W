Load: 44.73s, Before split: 0.1189s, Split: 0.002883s, After split: 0.4108s
GNN(
  (preprocess): Preprocess(
    node_feature: dim_out=2
    Total: dim_out=2
  )
  (pre_mp): GeneralMultiLayer(
    (Layer_0): GeneralLayer(
      (layer): Linear(
        (model): Linear(in_features=2, out_features=181, bias=True)
      )
      (post_layer): Sequential(
        (0): Dropout(p=0.4, inplace=False)
        (1): PReLU(num_parameters=1)
      )
    )
  )
  (mp): GNNStackStage(
    (layer0): GeneralLayer(
      (layer): GATConv(
        (model): GATConv(181, 181, heads=1)
      )
      (post_layer): Sequential(
        (0): Dropout(p=0.4, inplace=False)
        (1): PReLU(num_parameters=1)
      )
    )
    (layer1): GeneralLayer(
      (layer): GATConv(
        (model): GATConv(181, 181, heads=1)
      )
      (post_layer): Sequential(
        (0): Dropout(p=0.4, inplace=False)
        (1): PReLU(num_parameters=1)
      )
    )
    (layer2): GeneralLayer(
      (layer): GATConv(
        (model): GATConv(181, 181, heads=1)
      )
      (post_layer): Sequential(
        (0): Dropout(p=0.4, inplace=False)
        (1): PReLU(num_parameters=1)
      )
    )
    (layer3): GeneralLayer(
      (layer): GATConv(
        (model): GATConv(181, 181, heads=1)
      )
      (post_layer): Sequential(
        (0): Dropout(p=0.4, inplace=False)
        (1): PReLU(num_parameters=1)
      )
    )
  )
  (post_mp): GNNGraphHead(
    (layer_post_mp): MLP(
      (model): Sequential(
        (0): Linear(
          (model): Linear(in_features=181, out_features=7, bias=True)
        )
      )
    )
  )
)
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  augment_feature: []
  augment_feature_dims: []
  augment_feature_repr: original
  augment_label: 
  augment_label_dims: 0
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: False
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: nx
  label_column: none
  label_table: none
  location: local
  name: BCDB
  node_encoder: False
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
device: cpu
example_arg: example
example_group:
  example_arg: example
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: False
  clear_feature: True
  dim_inner: 181
  dropout: 0.4
  flow: source_to_target
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: gatconv
  layers_mp: 4
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: stack
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 100
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: results/BCDB_Dataset_grid_BCDB_grid/BCDB_Dataset-format=nx-dataset=BCDB-task=graph-trans=False-l_t=gatconv-l_pre=1-l_mp=4-l_post=1-stage=stack-bn=False-act=prelu-drop=0.4-agg=mean-optim=adam
print: both
round: 4
run_dir: results/BCDB_Dataset_grid_BCDB_grid/BCDB_Dataset-format=nx-dataset=BCDB-task=graph-trans=False-l_t=gatconv-l_pre=1-l_mp=4-l_post=1-stage=stack-bn=False-act=prelu-drop=0.4-agg=mean-optim=adam/0
seed: 1
share:
  dim_in: 2
  dim_out: 7
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 32
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 20
  iter_per_epoch: 32
  mode: standard
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 135034
Start from epoch 0
train: {'epoch': 0, 'eta': 7084.5537, 'loss': 1.9356, 'lr': 0.01, 'params': 135034, 'time_iter': 0.5381, 'accuracy': 0.4556}
val: {'epoch': 0, 'loss': 1.68, 'lr': 0, 'params': 135034, 'time_iter': 0.1567, 'accuracy': 0.4906}
test: {'epoch': 0, 'loss': 1.7194, 'lr': 0, 'params': 135034, 'time_iter': 0.1516, 'accuracy': 0.4915}
train: {'epoch': 1, 'eta': 6854.5358, 'loss': 1.495, 'lr': 0.01, 'params': 135034, 'time_iter': 0.5137, 'accuracy': 0.511}
train: {'epoch': 2, 'eta': 6662.411, 'loss': 1.4269, 'lr': 0.01, 'params': 135034, 'time_iter': 0.4975, 'accuracy': 0.5183}
train: {'epoch': 3, 'eta': 6763.912, 'loss': 1.3983, 'lr': 0.01, 'params': 135034, 'time_iter': 0.5697, 'accuracy': 0.5235}
train: {'epoch': 4, 'eta': 6556.8985, 'loss': 1.3774, 'lr': 0.01, 'params': 135034, 'time_iter': 0.4757, 'accuracy': 0.5277}
train: {'epoch': 5, 'eta': 6341.2323, 'loss': 1.3891, 'lr': 0.0099, 'params': 135034, 'time_iter': 0.4486, 'accuracy': 0.5192}
train: {'epoch': 6, 'eta': 6311.663, 'loss': 1.368, 'lr': 0.0099, 'params': 135034, 'time_iter': 0.5287, 'accuracy': 0.5171}
train: {'epoch': 7, 'eta': 6359.9853, 'loss': 1.3729, 'lr': 0.0099, 'params': 135034, 'time_iter': 0.5862, 'accuracy': 0.5138}
train: {'epoch': 8, 'eta': 6254.0347, 'loss': 1.3631, 'lr': 0.0098, 'params': 135034, 'time_iter': 0.4924, 'accuracy': 0.5218}
train: {'epoch': 9, 'eta': 6103.4022, 'loss': 1.3612, 'lr': 0.0098, 'params': 135034, 'time_iter': 0.4483, 'accuracy': 0.5256}
train: {'epoch': 10, 'eta': 5960.3857, 'loss': 1.3563, 'lr': 0.0098, 'params': 135034, 'time_iter': 0.44, 'accuracy': 0.5216}
train: {'epoch': 11, 'eta': 5892.349, 'loss': 1.3555, 'lr': 0.0097, 'params': 135034, 'time_iter': 0.5024, 'accuracy': 0.5268}
train: {'epoch': 12, 'eta': 5809.4193, 'loss': 1.3457, 'lr': 0.0096, 'params': 135034, 'time_iter': 0.4855, 'accuracy': 0.5253}
train: {'epoch': 13, 'eta': 5690.683, 'loss': 1.3307, 'lr': 0.0096, 'params': 135034, 'time_iter': 0.4385, 'accuracy': 0.5305}
train: {'epoch': 14, 'eta': 5601.7767, 'loss': 1.3237, 'lr': 0.0095, 'params': 135034, 'time_iter': 0.4674, 'accuracy': 0.5348}
train: {'epoch': 15, 'eta': 5577.5316, 'loss': 1.337, 'lr': 0.0095, 'params': 135034, 'time_iter': 0.5552, 'accuracy': 0.5277}
train: {'epoch': 16, 'eta': 5500.4011, 'loss': 1.3274, 'lr': 0.0094, 'params': 135034, 'time_iter': 0.4827, 'accuracy': 0.5218}
train: {'epoch': 17, 'eta': 5492.2995, 'loss': 1.3593, 'lr': 0.0093, 'params': 135034, 'time_iter': 0.5943, 'accuracy': 0.5211}
train: {'epoch': 18, 'eta': 5478.7773, 'loss': 1.3308, 'lr': 0.0092, 'params': 135034, 'time_iter': 0.5979, 'accuracy': 0.5256}
train: {'epoch': 19, 'eta': 5439.8928, 'loss': 1.3279, 'lr': 0.0091, 'params': 135034, 'time_iter': 0.5626, 'accuracy': 0.5492}
val: {'epoch': 19, 'loss': 1.2702, 'lr': 0, 'params': 135034, 'time_iter': 0.2094, 'accuracy': 0.5906}
test: {'epoch': 19, 'loss': 1.3128, 'lr': 0, 'params': 135034, 'time_iter': 0.2085, 'accuracy': 0.597}
train: {'epoch': 20, 'eta': 5386.2539, 'loss': 1.2611, 'lr': 0.009, 'params': 135034, 'time_iter': 0.54, 'accuracy': 0.577}
train: {'epoch': 21, 'eta': 5341.2668, 'loss': 1.2112, 'lr': 0.009, 'params': 135034, 'time_iter': 0.5618, 'accuracy': 0.5904}
train: {'epoch': 22, 'eta': 5277.1174, 'loss': 1.1208, 'lr': 0.0089, 'params': 135034, 'time_iter': 0.5246, 'accuracy': 0.618}
train: {'epoch': 23, 'eta': 5298.3469, 'loss': 1.1495, 'lr': 0.0088, 'params': 135034, 'time_iter': 0.7284, 'accuracy': 0.6119}
train: {'epoch': 24, 'eta': 5222.4008, 'loss': 1.0701, 'lr': 0.0086, 'params': 135034, 'time_iter': 0.5086, 'accuracy': 0.6251}
train: {'epoch': 25, 'eta': 5171.7267, 'loss': 1.0807, 'lr': 0.0085, 'params': 135034, 'time_iter': 0.5736, 'accuracy': 0.6253}
train: {'epoch': 26, 'eta': 5098.1429, 'loss': 1.0606, 'lr': 0.0084, 'params': 135034, 'time_iter': 0.5152, 'accuracy': 0.6253}
train: {'epoch': 27, 'eta': 5049.2027, 'loss': 1.0648, 'lr': 0.0083, 'params': 135034, 'time_iter': 0.5862, 'accuracy': 0.6244}
train: {'epoch': 28, 'eta': 5098.1058, 'loss': 1.0532, 'lr': 0.0082, 'params': 135034, 'time_iter': 0.8928, 'accuracy': 0.6298}
train: {'epoch': 29, 'eta': 5034.1213, 'loss': 1.0521, 'lr': 0.0081, 'params': 135034, 'time_iter': 0.5651, 'accuracy': 0.6234}
train: {'epoch': 30, 'eta': 4970.0645, 'loss': 1.0356, 'lr': 0.0079, 'params': 135034, 'time_iter': 0.5673, 'accuracy': 0.6359}
train: {'epoch': 31, 'eta': 4898.9516, 'loss': 1.036, 'lr': 0.0078, 'params': 135034, 'time_iter': 0.5448, 'accuracy': 0.6324}
train: {'epoch': 32, 'eta': 4820.1505, 'loss': 1.0264, 'lr': 0.0077, 'params': 135034, 'time_iter': 0.5167, 'accuracy': 0.6291}
train: {'epoch': 33, 'eta': 4742.3149, 'loss': 1.0193, 'lr': 0.0075, 'params': 135034, 'time_iter': 0.5181, 'accuracy': 0.6437}
train: {'epoch': 34, 'eta': 4660.8539, 'loss': 1.0242, 'lr': 0.0074, 'params': 135034, 'time_iter': 0.5014, 'accuracy': 0.635}
train: {'epoch': 35, 'eta': 4589.2213, 'loss': 0.9959, 'lr': 0.0073, 'params': 135034, 'time_iter': 0.5394, 'accuracy': 0.6456}
train: {'epoch': 36, 'eta': 4518.9086, 'loss': 0.9858, 'lr': 0.0071, 'params': 135034, 'time_iter': 0.5453, 'accuracy': 0.6435}
train: {'epoch': 37, 'eta': 4444.7343, 'loss': 0.9973, 'lr': 0.007, 'params': 135034, 'time_iter': 0.528, 'accuracy': 0.6432}
train: {'epoch': 38, 'eta': 4373.0081, 'loss': 0.977, 'lr': 0.0068, 'params': 135034, 'time_iter': 0.5388, 'accuracy': 0.6529}
train: {'epoch': 39, 'eta': 4308.3734, 'loss': 0.9849, 'lr': 0.0067, 'params': 135034, 'time_iter': 0.5744, 'accuracy': 0.6553}
val: {'epoch': 39, 'loss': 1.1522, 'lr': 0, 'params': 135034, 'time_iter': 0.1878, 'accuracy': 0.6}
test: {'epoch': 39, 'loss': 1.1756, 'lr': 0, 'params': 135034, 'time_iter': 0.1849, 'accuracy': 0.5876}
train: {'epoch': 40, 'eta': 4229.4454, 'loss': 0.9896, 'lr': 0.0065, 'params': 135034, 'time_iter': 0.5027, 'accuracy': 0.6465}
train: {'epoch': 41, 'eta': 4177.2039, 'loss': 0.9813, 'lr': 0.0064, 'params': 135034, 'time_iter': 0.6449, 'accuracy': 0.6501}
train: {'epoch': 42, 'eta': 4100.5133, 'loss': 0.9816, 'lr': 0.0062, 'params': 135034, 'time_iter': 0.515, 'accuracy': 0.6548}
train: {'epoch': 43, 'eta': 4025.6079, 'loss': 0.979, 'lr': 0.0061, 'params': 135034, 'time_iter': 0.5234, 'accuracy': 0.6515}
train: {'epoch': 44, 'eta': 3946.2582, 'loss': 0.9515, 'lr': 0.0059, 'params': 135034, 'time_iter': 0.4946, 'accuracy': 0.6567}
train: {'epoch': 45, 'eta': 3867.8543, 'loss': 0.9486, 'lr': 0.0058, 'params': 135034, 'time_iter': 0.4969, 'accuracy': 0.6635}
train: {'epoch': 46, 'eta': 3791.2885, 'loss': 0.9689, 'lr': 0.0056, 'params': 135034, 'time_iter': 0.5056, 'accuracy': 0.6612}
train: {'epoch': 47, 'eta': 3721.814, 'loss': 0.9537, 'lr': 0.0055, 'params': 135034, 'time_iter': 0.5521, 'accuracy': 0.6595}
train: {'epoch': 48, 'eta': 3627.9215, 'loss': 0.9483, 'lr': 0.0053, 'params': 135034, 'time_iter': 0.3769, 'accuracy': 0.6623}
train: {'epoch': 49, 'eta': 3535.6855, 'loss': 0.9371, 'lr': 0.0052, 'params': 135034, 'time_iter': 0.3762, 'accuracy': 0.6713}
train: {'epoch': 50, 'eta': 3446.0063, 'loss': 0.9322, 'lr': 0.005, 'params': 135034, 'time_iter': 0.3833, 'accuracy': 0.6678}
train: {'epoch': 51, 'eta': 3364.9012, 'loss': 0.9317, 'lr': 0.0048, 'params': 135034, 'time_iter': 0.441, 'accuracy': 0.6722}
train: {'epoch': 52, 'eta': 3294.5441, 'loss': 0.9389, 'lr': 0.0047, 'params': 135034, 'time_iter': 0.5249, 'accuracy': 0.6699}
train: {'epoch': 53, 'eta': 3206.8469, 'loss': 0.9095, 'lr': 0.0045, 'params': 135034, 'time_iter': 0.3717, 'accuracy': 0.6817}
train: {'epoch': 54, 'eta': 3123.6341, 'loss': 0.922, 'lr': 0.0044, 'params': 135034, 'time_iter': 0.4001, 'accuracy': 0.6741}
train: {'epoch': 55, 'eta': 3039.7162, 'loss': 0.9221, 'lr': 0.0042, 'params': 135034, 'time_iter': 0.3831, 'accuracy': 0.6706}
train: {'epoch': 56, 'eta': 2955.2173, 'loss': 0.9084, 'lr': 0.0041, 'params': 135034, 'time_iter': 0.3658, 'accuracy': 0.685}
train: {'epoch': 57, 'eta': 2873.3638, 'loss': 0.9018, 'lr': 0.0039, 'params': 135034, 'time_iter': 0.3804, 'accuracy': 0.6805}
train: {'epoch': 58, 'eta': 2793.5279, 'loss': 0.9082, 'lr': 0.0038, 'params': 135034, 'time_iter': 0.3908, 'accuracy': 0.6843}
train: {'epoch': 59, 'eta': 2713.6907, 'loss': 0.9104, 'lr': 0.0036, 'params': 135034, 'time_iter': 0.3803, 'accuracy': 0.6781}
val: {'epoch': 59, 'loss': 1.1764, 'lr': 0, 'params': 135034, 'time_iter': 0.1547, 'accuracy': 0.6226}
test: {'epoch': 59, 'loss': 1.2059, 'lr': 0, 'params': 135034, 'time_iter': 0.1364, 'accuracy': 0.6121}
train: {'epoch': 60, 'eta': 2634.1036, 'loss': 0.897, 'lr': 0.0035, 'params': 135034, 'time_iter': 0.372, 'accuracy': 0.6767}
train: {'epoch': 61, 'eta': 2555.3345, 'loss': 0.9015, 'lr': 0.0033, 'params': 135034, 'time_iter': 0.3701, 'accuracy': 0.6765}
train: {'epoch': 62, 'eta': 2481.3239, 'loss': 0.9024, 'lr': 0.0032, 'params': 135034, 'time_iter': 0.419, 'accuracy': 0.6819}
train: {'epoch': 63, 'eta': 2403.9413, 'loss': 0.8824, 'lr': 0.003, 'params': 135034, 'time_iter': 0.3663, 'accuracy': 0.6866}
train: {'epoch': 64, 'eta': 2327.3906, 'loss': 0.8825, 'lr': 0.0029, 'params': 135034, 'time_iter': 0.3656, 'accuracy': 0.6892}
train: {'epoch': 65, 'eta': 2252.2632, 'loss': 0.8871, 'lr': 0.0027, 'params': 135034, 'time_iter': 0.374, 'accuracy': 0.6911}
train: {'epoch': 66, 'eta': 2178.7573, 'loss': 0.8787, 'lr': 0.0026, 'params': 135034, 'time_iter': 0.3872, 'accuracy': 0.6862}
train: {'epoch': 67, 'eta': 2104.9024, 'loss': 0.8652, 'lr': 0.0025, 'params': 135034, 'time_iter': 0.3713, 'accuracy': 0.7022}
train: {'epoch': 68, 'eta': 2031.8594, 'loss': 0.8673, 'lr': 0.0023, 'params': 135034, 'time_iter': 0.373, 'accuracy': 0.6873}
train: {'epoch': 69, 'eta': 1960.4713, 'loss': 0.8527, 'lr': 0.0022, 'params': 135034, 'time_iter': 0.3903, 'accuracy': 0.7012}
train: {'epoch': 70, 'eta': 1890.5868, 'loss': 0.8679, 'lr': 0.0021, 'params': 135034, 'time_iter': 0.4079, 'accuracy': 0.6871}
train: {'epoch': 71, 'eta': 1818.0306, 'loss': 0.8603, 'lr': 0.0019, 'params': 135034, 'time_iter': 0.3478, 'accuracy': 0.6944}
train: {'epoch': 72, 'eta': 1746.3626, 'loss': 0.8672, 'lr': 0.0018, 'params': 135034, 'time_iter': 0.3512, 'accuracy': 0.6895}
train: {'epoch': 73, 'eta': 1677.628, 'loss': 0.8541, 'lr': 0.0017, 'params': 135034, 'time_iter': 0.3996, 'accuracy': 0.6951}
train: {'epoch': 74, 'eta': 1612.4843, 'loss': 0.849, 'lr': 0.0016, 'params': 135034, 'time_iter': 0.4712, 'accuracy': 0.6942}
train: {'epoch': 75, 'eta': 1547.3031, 'loss': 0.8535, 'lr': 0.0015, 'params': 135034, 'time_iter': 0.4687, 'accuracy': 0.6951}
train: {'epoch': 76, 'eta': 1478.3998, 'loss': 0.8475, 'lr': 0.0014, 'params': 135034, 'time_iter': 0.3732, 'accuracy': 0.6961}
train: {'epoch': 77, 'eta': 1409.8675, 'loss': 0.8467, 'lr': 0.0012, 'params': 135034, 'time_iter': 0.3699, 'accuracy': 0.6984}
train: {'epoch': 78, 'eta': 1345.0648, 'loss': 0.8371, 'lr': 0.0011, 'params': 135034, 'time_iter': 0.4615, 'accuracy': 0.7015}
train: {'epoch': 79, 'eta': 1283.2294, 'loss': 0.8405, 'lr': 0.001, 'params': 135034, 'time_iter': 0.5482, 'accuracy': 0.6987}
val: {'epoch': 79, 'loss': 1.2325, 'lr': 0, 'params': 135034, 'time_iter': 0.3298, 'accuracy': 0.6189}
test: {'epoch': 79, 'loss': 1.2941, 'lr': 0, 'params': 135034, 'time_iter': 0.1754, 'accuracy': 0.6177}
train: {'epoch': 80, 'eta': 1220.6486, 'loss': 0.8369, 'lr': 0.001, 'params': 135034, 'time_iter': 0.5331, 'accuracy': 0.6991}
train: {'epoch': 81, 'eta': 1154.9957, 'loss': 0.8405, 'lr': 0.0009, 'params': 135034, 'time_iter': 0.4348, 'accuracy': 0.6989}
train: {'epoch': 82, 'eta': 1089.0711, 'loss': 0.8461, 'lr': 0.0008, 'params': 135034, 'time_iter': 0.4179, 'accuracy': 0.6968}
train: {'epoch': 83, 'eta': 1023.4305, 'loss': 0.834, 'lr': 0.0007, 'params': 135034, 'time_iter': 0.4194, 'accuracy': 0.7012}
train: {'epoch': 84, 'eta': 959.1192, 'loss': 0.8241, 'lr': 0.0006, 'params': 135034, 'time_iter': 0.4662, 'accuracy': 0.7046}
train: {'epoch': 85, 'eta': 894.4953, 'loss': 0.8253, 'lr': 0.0005, 'params': 135034, 'time_iter': 0.4492, 'accuracy': 0.7071}
train: {'epoch': 86, 'eta': 829.3446, 'loss': 0.8241, 'lr': 0.0005, 'params': 135034, 'time_iter': 0.4171, 'accuracy': 0.7043}
train: {'epoch': 87, 'eta': 764.6468, 'loss': 0.8335, 'lr': 0.0004, 'params': 135034, 'time_iter': 0.4299, 'accuracy': 0.7048}
train: {'epoch': 88, 'eta': 700.0577, 'loss': 0.8335, 'lr': 0.0004, 'params': 135034, 'time_iter': 0.4263, 'accuracy': 0.6963}
train: {'epoch': 89, 'eta': 635.5444, 'loss': 0.8292, 'lr': 0.0003, 'params': 135034, 'time_iter': 0.4195, 'accuracy': 0.7043}
train: {'epoch': 90, 'eta': 571.1937, 'loss': 0.8171, 'lr': 0.0002, 'params': 135034, 'time_iter': 0.4173, 'accuracy': 0.7083}
train: {'epoch': 91, 'eta': 506.4457, 'loss': 0.8156, 'lr': 0.0002, 'params': 135034, 'time_iter': 0.3663, 'accuracy': 0.7074}
train: {'epoch': 92, 'eta': 441.8823, 'loss': 0.8262, 'lr': 0.0002, 'params': 135034, 'time_iter': 0.3503, 'accuracy': 0.702}
train: {'epoch': 93, 'eta': 377.765, 'loss': 0.8231, 'lr': 0.0001, 'params': 135034, 'time_iter': 0.3579, 'accuracy': 0.7097}
train: {'epoch': 94, 'eta': 314.5773, 'loss': 0.8217, 'lr': 0.0001, 'params': 135034, 'time_iter': 0.441, 'accuracy': 0.7095}
train: {'epoch': 95, 'eta': 251.25, 'loss': 0.8139, 'lr': 0.0001, 'params': 135034, 'time_iter': 0.3987, 'accuracy': 0.7137}
train: {'epoch': 96, 'eta': 188.0977, 'loss': 0.824, 'lr': 0.0, 'params': 135034, 'time_iter': 0.3897, 'accuracy': 0.7022}
train: {'epoch': 97, 'eta': 125.3415, 'loss': 0.8135, 'lr': 0.0, 'params': 135034, 'time_iter': 0.4505, 'accuracy': 0.7079}
train: {'epoch': 98, 'eta': 62.5635, 'loss': 0.8204, 'lr': 0.0, 'params': 135034, 'time_iter': 0.3913, 'accuracy': 0.7079}
train: {'epoch': 99, 'eta': 0.0, 'loss': 0.8155, 'lr': 0.0, 'params': 135034, 'time_iter': 0.4974, 'accuracy': 0.7069}
val: {'epoch': 99, 'loss': 1.21, 'lr': 0, 'params': 135034, 'time_iter': 0.227, 'accuracy': 0.6226}
test: {'epoch': 99, 'loss': 1.2817, 'lr': 0, 'params': 135034, 'time_iter': 0.1593, 'accuracy': 0.6064}
Task done, results saved in results/BCDB_Dataset_grid_BCDB_grid/BCDB_Dataset-format=nx-dataset=BCDB-task=graph-trans=False-l_t=gatconv-l_pre=1-l_mp=4-l_post=1-stage=stack-bn=False-act=prelu-drop=0.4-agg=mean-optim=adam
Results aggregated across runs saved in results/BCDB_Dataset_grid_BCDB_grid/BCDB_Dataset-format=nx-dataset=BCDB-task=graph-trans=False-l_t=gatconv-l_pre=1-l_mp=4-l_post=1-stage=stack-bn=False-act=prelu-drop=0.4-agg=mean-optim=adam/agg
